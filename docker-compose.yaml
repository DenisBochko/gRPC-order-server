services:
  db:
    image: postgres:15
    container_name: database
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    # если база упала с ошибкой, то мы её перезапускаем
    restart: always

    volumes:
      - postgres:/data/postgres

    # это проверка базы данных, команда дёргает postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "admin"]
      interval: 5s
      timeout: 5s
      retries: 3
  redis:
    image: redis:latest
    container_name: redis_container
    environment:
      - REDIS_PASSWORD=${REDIS_PASS}
      - REDIS_DB=${REDIS_DB}
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
  service:
    build: 
      context: .
      dockerfile: Dockerfile
    image: order-service:latest
    ports:
      - "8080:8080"
      - "50051:50051"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

volumes:
  postgres:
  redisdata: